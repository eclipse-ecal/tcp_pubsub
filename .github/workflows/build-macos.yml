name: macOS

on:
  push:
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules:  'true'
        fetch-depth: 0

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B ${{github.workspace}}/_build \
                 -DTCP_PUBSUB_BUILD_SAMPLES=ON \
                 -DTCP_PUBSUB_BUILD_TESTS=ON \
                 -DTCP_PUBSUB_USE_BUILTIN_ASIO=ON \
                 -DTCP_PUBSUB_USE_BUILTIN_RECYCLE=ON \
                 -DTCP_PUBSUB_USE_BUILTIN_GTEST=ON \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                 -DCMAKE_CXX_FLAGS=-DASIO_NO_DEPRECATED
      shell: bash

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/_build --config ${{env.BUILD_TYPE}}

    - name: Run Tests
      run: ctest -C Release -V
      working-directory: ${{ github.workspace }}/_build
      
